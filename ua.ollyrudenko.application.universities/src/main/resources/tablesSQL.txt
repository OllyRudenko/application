DROP TABLE IF EXISTS public.groups, public.students, public.courses, public.teachers, public.lessons, public.courses_groups, public.courses_teachers;
CREATE TABLE public.groups
(
    group_id SERIAL PRIMARY KEY,
    group_name character varying(5) NOT NULL
)
WITH (
    OIDS = FALSE
);


CREATE TABLE public.courses(
    course_id SERIAL PRIMARY KEY, 
    course_name character varying(25) NOT NULL,
    course_description text NOT NULL
)
WITH (
    OIDS = FALSE
);


CREATE TABLE public.students(
    student_id SERIAL PRIMARY KEY, 
    first_name character varying(15) NOT NULL,
    last_name character varying(15) NOT NULL,
    entry date NOT NULL,
    group_id integer,
    FOREIGN KEY (group_id) REFERENCES groups(group_id) ON DELETE CASCADE ON UPDATE CASCADE
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.teachers(
    teacher_id SERIAL PRIMARY KEY, 
    first_name character varying(15) NOT NULL,
    last_name character varying(15) NOT NULL
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.lessons(
    lesson_id SERIAL PRIMARY KEY, 
    course_id integer,
    FOREIGN KEY (course_id) REFERENCES courses(course_id) ON DELETE CASCADE ON UPDATE CASCADE,
    teacher_id integer,
    FOREIGN KEY (teacher_id) REFERENCES teachers(teacher_id) ON DELETE CASCADE ON UPDATE CASCADE,
    classroom integer,
    group_id integer,
    FOREIGN KEY (group_id) REFERENCES groups(group_id) ON DELETE CASCADE ON UPDATE CASCADE,
    time TIME NOT NULL,
    date DATE NOT NULL
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.courses_groups(
    course_id integer REFERENCES courses(course_id) ON DELETE CASCADE, 
    group_id integer REFERENCES groups(group_id) ON DELETE CASCADE
)
WITH (
    OIDS = FALSE
);

CREATE TABLE public.courses_teachers(
    course_id integer REFERENCES courses(course_id) ON DELETE CASCADE, 
    teacher_id integer REFERENCES teachers(teacher_id) ON DELETE CASCADE
)
WITH (
    OIDS = FALSE
);